" Luke Smith vimrc -> https://github.com/LukeSmithxyz/voidrice/blob/archi3/.config/nvim/init.vim
" Minimal .vimrc for C/C++ Developers -> https://gist.github.com/rocarvaj/2513367

set nocompatible
set wildmenu
filetype off
set background=dark

"" Spell Checking
autocmd BufRead,BufNewFile *.md,*.tex,*.txt setlocal spell
set complete+=kspell
set clipboard=unnamedplus


" Making sure the vundle settings are working accordingly
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

" Python
Plugin 'vim-scripts/indentpython.vim'
Plugin 'Vimjas/vim-python-pep8-indent'
Plugin 'vim-python/python-syntax'

" Plugin 'nathanaelkane/vim-indent-guides'

" Ease of use
Plugin 'jiangmiao/auto-pairs'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-surround'
Plugin 'dkarter/bullets.vim'
Plugin 'tomasiser/vim-code-dark'

" C++

Plugin 'google/vim-maktaba'
Plugin 'google/vim-codefmt'

" LaTeX
Plugin 'xuhdev/vim-latex-live-preview'

call vundle#end()

syntax on
syntax enable
set t_Co=256
set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
let g:python_highlight_all = 1

autocmd FileType vim let b:vcm_tab_complete = 'vim'

"autocmd BufRead,BufNewFile * setlocal tabstop=2 shiftwidth=2
" :set tabstop=2 shiftwidth=2 expandtab | retab  
set number 
set encoding=utf-8 
set termencoding=utf-8

set showmatch
set incsearch

" Moving through the files
inoremap <S-Tab> <C-d>
nnoremap <S-Tab> <<
inoremap <Tab> <C-t>
nnoremap <Tab> >>

" Copy/Paste Functionality

let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction

" Text Processing

" PROGRAMMING

" Make run from Vim (gcc, clang, jcomp, pdflatex)

set autowrite

autocmd FileType c,cpp nnoremap <buffer> <C-c> :!clear && c_lang_make_run % <Enter>
autocmd FileType tex nnoremap <buffer> <C-c> :LLPStartPreview <Enter>
autocmd FileType tex nnoremap <buffer> <C-e> :!clear && make_run_latex "%" <Enter>
"autocmd FileType tex nnoremap <buffer> <C-c> :!clear && make_run_latex "%" <Enter>
autocmd FileType java nnoremap <buffer> <C-c> :!clear && jcomp % <Enter>
autocmd FileType go nnoremap <buffer> <C-c> :!clear && go run % <Enter>

" Python 

autocmd FileType python nnoremap <buffer> <C-c> :!clear && chmod +x "%" && python % <Enter>
autocmd FileType python nnoremap <buffer> <C-e> :!clear && python_syntax % <Enter>
autocmd FileType python map <buffer> <C-p> :call flake8#Flake8()<CR>

autocmd FileType cs nnoremap <buffer> <C-c> :!clear && c_sharp_compile % <Enter>

" Web developement
autocmd FileType html nnoremap <buffer> <C-c> :!firefox % & disown <Enter>
autocmd FileType php nnoremap <buffer> <C-c> :!clear && php % <Enter>
autocmd FileType javascript nnoremap <buffer> <C-c> :! clear && node % <Enter>

" Statistics
autocmd FileType r nnoremap <buffer> <C-c> :!clear && r_stat_run % <Enter>

" Text processing
autocmd FileType rmd nnoremap <buffer> <C-c> :!clear && compile_r_markdown % <Enter>
autocmd FileType rmd,markdown nnoremap <buffer> <C-c> :!clear && mdserver % <Enter>
autocmd FileType markdwon nnoremap <buffer> :w <CR> :! echo "Hello" <Enter>
autocmd FileType text nnoremap <buffer> <C-c> :! clear && compile_plain_text % <Enter>


" C++ Code formatting
autocmd FileType cpp set tabstop=2
autocmd FileType cpp set shiftwidth=2

" Python Code formatting

let g:flake8_show_in_file=1 
let g:flake8_quickfix_location="vertical topleft"
let g:flake8_quickfix_height=75

" WORD PROCESSING

" LaTeX

let g:livepreview_previewer = 'xreader'

" Navigating with guides
inoremap <leader><leader> <Esc>/<++><Enter>"_c4l
vnoremap <leader><leader> <Esc>/<++><Enter>"_c4l
map <leader><leader> <Esc>/<++><Enter>"_c4l

inoremap <expr> <TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr> <S-TAB> pumvisible() ? "\<C-p>" : "\<TAB>"

inoremap <silent><expr> <Tab>
      \ pumvisible() ? "\<C-n>" : "\<TAB>"

filetype plugin on
autocmd FileType tex,rmd,markdown exec("setlocal dictionary+=".$HOME."/.vim/dictionaries/".expand('<amatch>'))
set completeopt=menuone,longest,preview
set complete+=k

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MULTIPURPOSE TAB KEY
" Indent if we're at the beginning of a line. Else, do completion.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction

inoremap <expr> <tab> InsertTabWrapper()
inoremap <s-tab> <c-n>


let g:bullets_enabled_file_types = [
    \ 'markdown',
    \ 'text',
    \ 'tex'
    \]
