" Luke Smith vimrc -> https://github.com/LukeSmithxyz/voidrice/blob/archi3/.config/nvim/init.vim

set nocompatible
filetype off
set background=dark

"" Spell Checking
autocmd BufRead,BufNewFile *.md setlocal spell
set complete+=kspell

" Making sure the vundle settings are working accordingly
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" List of our packages

Plugin 'gmarik/Vundle.vim'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'tmhedberg/SimpylFold'
Plugin 'Vimjas/vim-python-pep8-indent'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'jiangmiao/auto-pairs'
Plugin 'ying17zi/vim-live-latex-preview'
Plugin 'scrooloose/nerdcommenter'
Plugin 'PratikBhusal/vim-grip'
Plugin 'junegunn/goyo.vim'
Plugin 'mattn/emmet-vim'

call vundle#end()

"filetype indent on
syntax on
syntax enable
set t_Co=256
set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
set number 
set encoding=utf-8 
set termencoding=utf-8
set textwidth=120

set showmatch
set incsearch

"set comments=sl:/*,mb:\ *,elx:\ */

" Moving through the files
inoremap <S-Tab> <C-d>
nnoremap <S-Tab> <<
inoremap <Tab> <C-t>
nnoremap <Tab> >>

"This is so I can have proper copy pasting format

let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction

" Text Processing

" Wrapping text around a word or phrase --> https://superuser.com/questions/875095/adding-parenthesis-around-highlighted-text-in-vim

" PROGRAMMING

" CPP
" These were inspired by Luke Smith's LaTeX scripts found below

" External header
autocmd FileType cpp,hpp inoremap ,eh #include <<++>><ESC>i
" Local header
autocmd FileType cpp,hpp inoremap ,lh #include "<++>"<ESC>i
autocmd FileType cpp,hpp inoremap ,t template <typename T><Enter><ESC>i
autocmd FileType markdown inoremap ,s ```<++><Enter>```<Enter><ESC>i

" Make run from Vim (gcc, clang, jcomp, pdflatex)

set autowrite
autocmd FileType cpp nnoremap <buffer> <C-c> :!clear && clang++-6.0 -std=c++17 % -g -o %:r.out && ./%:r.out <Enter>
autocmd FileType tex nnoremap <buffer> <C-c> :!make_run_latex "%" <Enter>
autocmd FileType java nnoremap <buffer> <C-c> :!clear && jcomp % <Enter>
autocmd FileType c nnoremap <buffer> <C-c> :!clear && gcc % -o %:r && ./%:r <Enter>
autocmd FileType markdown nnoremap <buffer> <C-c> :OpenMarkdownPreview
autocmd FileType python nnoremap <buffer> <C-c> :!clear && chmod +x "%" && python3.5 % <Enter>
autocmd FileType html nnoremap <buffer> <C-c> :!firefox % & disown <Enter>
autocmd FileType php nnoremap <buffer> <C-c> :!clear && php % <Enter>

"nnoremap <C-m> :!clear && make all <Enter>
" Push to Github directly from a vim buffer
nnoremap <C-g> :!commit "$(pwd)" <Enter>

" Run commands for certain files when saved
autocmd BufWritePost ~/.Xresources !xrdb ~/.Xresources
autocmd BufWritePost ~/.zshrc !source ~/.zshrc

"Autocomplete for programming languages
Bundle 'Valloric/YouCompleteMe'
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/.ycm_extra_conf.py'


" WORD PROCESSING

" LaTeX

" Navigating with guides
inoremap <leader><leader> <Esc>/<++><Enter>"_c4l
vnoremap <leader><leader> <Esc>/<++><Enter>"_c4l
map <leader><leader> <Esc>/<++><Enter>"_c4l

